
"use client";

import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Button } from "@/components/ui/button";
import Link from "next/link";
import Image from "next/image";
import { ArrowLeft } from "lucide-react";
import { useRouter } from "next/navigation";
import { initialProducts } from "@/lib/mockData"; // Assuming products have some revenue data or can be simulated

// Simulate more comprehensive product revenue data
const allProductsRevenueData = initialProducts.map((product, index) => ({
  ...product,
  revenue: (product.price * (product.stock > 0 ? (10 + index * 5) : 0)) + (Math.random() * 1000), // Simulated revenue
  unitsSold: (product.stock > 0 ? (10 + index * 5) : 0) + Math.floor(Math.random() * 50), // Simulated units sold
}));

export default function AllProductsRevenuePage() {
  const router = useRouter();

  return (
    <div className="flex flex-col gap-6">
      <div className="flex items-center justify-between">
        <h1 className="text-3xl font-bold">All Products Revenue</h1>
        <Button variant="outline" onClick={() => router.back()}>
          <ArrowLeft className="mr-2 h-4 w-4" /> Back to Revenue Report
        </Button>
      </div>

      <Card>
        <CardHeader>
          <CardTitle>Product Revenue Breakdown</CardTitle>
          <CardDescription>Revenue generated by each product.</CardDescription>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead className="hidden sm:table-cell">Image</TableHead>
                <TableHead>Product Name</TableHead>
                <TableHead>Category</TableHead>
                <TableHead className="text-right">Total Revenue</TableHead>
                <TableHead className="text-right">Units Sold</TableHead>
                <TableHead className="text-right">Avg. Price/Unit</TableHead>
                <TableHead className="text-center">Actions</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {allProductsRevenueData.map((product) => (
                <TableRow key={product.id}>
                  <TableCell className="hidden sm:table-cell">
                    <Image
                      src={product.images[0] || "https://placehold.co/40x40.png"}
                      alt={product.name}
                      width={40}
                      height={40}
                      className="rounded-md object-cover"
                      data-ai-hint={product.dataAiHints[0] || "product image"}
                    />
                  </TableCell>
                  <TableCell>
                    <Link href={`/products/${product.id}`} className="font-medium hover:underline">
                      {product.name}
                    </Link>
                  </TableCell>
                  <TableCell>{product.category}</TableCell>
                  <TableCell className="text-right">ZMW {product.revenue.toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}</TableCell>
                  <TableCell className="text-right">{product.unitsSold}</TableCell>
                  <TableCell className="text-right">
                    {product.unitsSold > 0 ? `ZMW ${(product.revenue / product.unitsSold).toLocaleString(undefined, {minimumFractionDigits: 2, maximumFractionDigits: 2})}` : "ZMW 0.00"}
                  </TableCell>
                  <TableCell className="text-center">
                    <Button variant="outline" size="sm" asChild>
                      <Link href={`/products/${product.id}`}>View Product</Link>
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
          {allProductsRevenueData.length === 0 && (
            <p className="text-center text-muted-foreground py-4">No product revenue data available.</p>
          )}
        </CardContent>
      </Card>
    </div>
  );
}

